local args = {
    [1] = "setup"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Hexa"):FireServer(unpack(args))

-- Define the target position
local targetPosition = Vector3.new(-10.57323932647705, -5.207256317138672, 5.755485534667969) -- Change these coordinates to your desired location

-- Get the local player
local player = game.Players.LocalPlayer

-- Check if the player's character exists
if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
    -- Teleport the character by changing the position of its HumanoidRootPart
    player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(targetPosition)
else
    -- Wait for the character to load if it hasn't yet
    player.CharacterAdded:Wait()
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(targetPosition)

   end
end


local players = game:GetService("Players")
local player = players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TestGui"
screenGui.Parent = playerGui

local textButton1 = Instance.new("TextButton")
textButton1.Name = "FirstTextButton"
local firstButton = script.Parent

textButton1.Parent = screenGui
textButton1.Size = UDim2.new(0, 50, 0, 50)
textButton1.Position = UDim2.new(0.5, 200, 0.5, -150)
textButton1.BackgroundColor3 = Color3.new(0.389, 0, 0)


textButton1.Text = "E"
textButton1.TextColor3 = Color3.new(255, 255, 255)
textButton1.TextScaled = true
textButton1.Font = Enum.Font.SourceSansBold
textButton1.BorderColor3 = Color3.new(255, 0, 0)
textButton1.BorderSizePixel = 5
textButton1.MouseButton1Click:Connect(function()


-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://75459203439371" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()
wait(0.45)
local args = {
    [1] = "Rocket Launcher"
}

game:GetService("ReplicatedStorage"):WaitForChild("RetroAbility"):FireServer(unpack(args))


end)

local players = game:GetService("Players")
local player = players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TestGui"
screenGui.Parent = playerGui

local textButton2 = Instance.new("TextButton")
textButton2.Name = "SecondTextButton"

textButton2.Parent = screenGui
textButton2.Size = UDim2.new(0, 50, 0, 50)
textButton2.Position = UDim2.new(0.5, 140, 0.5, -150)
textButton2.BackgroundColor3 = Color3.new(0.389, 0, 0)


textButton2.Text = "R"
textButton2.TextColor3 = Color3.new(255, 255, 255)
textButton2.TextScaled = true
textButton2.Font = Enum.Font.SourceSansBold
textButton2.BorderColor3 = Color3.new(255, 0, 0)
textButton2.BorderSizePixel = 5
textButton2.MouseButton1Click:Connect(function()

local player = game.Players.LocalPlayer
   local character = player.Character
   local humanoid = character:FindFirstChildWhichIsA("Humanoid")

   if humanoid then
       humanoid.WalkSpeed = 0


-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://16881872560" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()


wait(2)


local args = {
    [1] = "jump"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Silly"):FireServer(unpack(args))


local player = game.Players.LocalPlayer
   local character = player.Character
   local humanoid = character:FindFirstChildWhichIsA("Humanoid")

   if humanoid then
       humanoid.WalkSpeed = 200
animationTrack:Stop()


-- Get the local player
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

-- Check if the player exists before proceeding
if not localPlayer then
    warn("Local player not found!")
    return
end

-- Wait for the character to load
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Make the humanoid jump by setting its Jump property to true
humanoid.Jump = true


local player = game.Players.LocalPlayer
   local character = player.Character
   local humanoid = character:FindFirstChildWhichIsA("Humanoid")

   if humanoid then
       humanoid.JumpPower = 330


-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://16898368253" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()



wait(3.65)




local args = {
    [1] = "Bomb"
}

game:GetService("ReplicatedStorage"):WaitForChild("RetroAbility"):FireServer(unpack(args))


-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://78983287679672" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()


local player = game.Players.LocalPlayer
   local character = player.Character
   local humanoid = character:FindFirstChildWhichIsA("Humanoid")

   if humanoid then
       humanoid.WalkSpeed = 30


local player = game.Players.LocalPlayer
   local character = player.Character
   local humanoid = character:FindFirstChildWhichIsA("Humanoid")

   if humanoid then
       humanoid.JumpPower = 50


                                
          
        end
      end
    end
  end        
end

end)

local players = game:GetService("Players")
local player = players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TestGui"
screenGui.Parent = playerGui

local textButton3 = Instance.new("TextButton")
textButton3.Name = "ThirdTextButton"

textButton3.Parent = screenGui
textButton3.Size = UDim2.new(0, 50, 0, 50)
textButton3.Position = UDim2.new(0.5, 140, 0.5, -90)
textButton3.BackgroundColor3 = Color3.new(0.389, 0, 0)


textButton3.Text = "D"
textButton3.TextColor3 = Color3.new(255, 255, 255)
textButton3.TextScaled = true
textButton3.Font = Enum.Font.SourceSansBold
textButton3.BorderColor3 = Color3.new(255, 0, 0)
textButton3.BorderSizePixel = 5
textButton3.MouseButton1Click:Connect(function()

-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://117174405466885" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()




wait(0.25)
-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://78983287679672" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()



local args = {
    [1] = "Bomb"
}
game:GetService("ReplicatedStorage"):WaitForChild("RetroAbility"):FireServer(unpack(args))


end)

local players = game:GetService("Players")
local player = players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TestGui"
screenGui.Parent = playerGui

local textButton5 = Instance.new("TextButton")
textButton5.Name = "FourthTextButton"
textButton5.Parent = screenGui
textButton5.Size = UDim2.new(0, 50, 0, 50)
textButton5.Position = UDim2.new(0.5, 200, 0.5, -90)
textButton5.BackgroundColor3 = Color3.new(0.389, 0, 0)


textButton5.Text = "F"
textButton5.TextColor3 = Color3.new(255, 255, 255)
textButton5.TextScaled = true
textButton5.Font = Enum.Font.SourceSansBold
textButton5.BorderColor3 = Color3.new(255, 0, 0)
textButton5.BorderSizePixel = 5

textButton5.MouseButton1Click:Connect(function()

    local localPlayer = players.LocalPlayer
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    local rootPart = character:WaitForChild("HumanoidRootPart")

    local function findClosestPlayer()
        local closestPlayer = nil
        local shortestDistance = math.huge

        for _, otherPlayer in ipairs(players:GetPlayers()) do
            if otherPlayer ~= localPlayer and otherPlayer.Character then
                local targetCharacter = otherPlayer.Character
                local targetRootPart = targetCharacter:WaitForChild("HumanoidRootPart")
                
                local distance = (rootPart.Position - targetRootPart.Position).magnitude
                
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end
        return closestPlayer
    end

    local function teleportBehindClosestPlayer()
        local closestPlayer = findClosestPlayer()
        
        if closestPlayer and closestPlayer.Character then
            local targetCharacter = closestPlayer.Character
            local targetRootPart = targetCharacter:WaitForChild("HumanoidRootPart")
            
            local newPositionCFrame = targetRootPart.CFrame * CFrame.new(0, 0, 5)
            
            rootPart.CFrame = newPositionCFrame
        end
    end
    
    -- Call the function to teleport when the button is clicked
    teleportBehindClosestPlayer()


local args = {
    [1] = "jump"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Silly"):FireServer(unpack(args))



-- Get necessary services and the player
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for the player's character to be added
local character = player.Character or player.CharacterAdded:Wait()

-- Wait for the character's humanoid and animator to be ready
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

-- Create a new Animation instance
local animation = Instance.new("Animation")

-- Set the AnimationId to your animation's ID. Replace 'rbxassetid://16144816662'
animation.AnimationId = "rbxassetid://92312423604989" 

-- Load the animation into an AnimationTrack
local animationTrack = animator:LoadAnimation(animation)

-- Play the animation
animationTrack:Play()


wait(0.20)


local args = {
    [1] = "Ban Hammer"
}

game:GetService("ReplicatedStorage"):WaitForChild("RetroAbility"):FireServer(unpack(args))




end)








local players = game:GetService("Players")
local player = players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TestGui"
screenGui.Parent = playerGui

local textButton6 = Instance.new("TextButton")
textButton6.Name = "HitTextButton"
textButton6.Parent = screenGui
textButton6.Size = UDim2.new(0, 50, 0, 50)
textButton6.Position = UDim2.new(0.5, 85, 0.5, -90)
textButton6.BackgroundColor3 = Color3.new(0.389, 0, 0)

textButton6.Text = "Punch"
textButton6.TextColor3 = Color3.new(255, 255, 255)
textButton6.TextScaled = true
textButton6.Font = Enum.Font.SourceSansBold
textButton6.BorderColor3 = Color3.new(255, 0, 0)
textButton6.BorderSizePixel = 5

textButton6.MouseButton1Click:Connect(function()
    -- Get the local player and their character
    local localPlayer = players.LocalPlayer
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    
    -- Check if the character and humanoid exist
    if not character or not character:FindFirstChild("Humanoid") then
        warn("Character or Humanoid not found!")
        return
    end

    local humanoid = character:FindFirstChild("Humanoid")
    local animator = humanoid:WaitForChild("Animator")

    -- Define the punch animation
    local punchAnim = Instance.new("Animation")
    punchAnim.AnimationId = "rbxassetid://109511274923523" -- Use your punch animation ID here

    local punchTrack = animator:LoadAnimation(punchAnim)
    
    -- Play the punch animation
    punchTrack:Play()

    -- The main function to find and hit the closest player
    local function getClosestPlayer(startPosition, maxDistance)
        local closestPlayer = nil
        local shortestDistance = maxDistance

        for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
            if otherPlayer ~= localPlayer and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (otherPlayer.Character.HumanoidRootPart.Position - startPosition.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end
        return closestPlayer
    end

    -- Find the closest player within a 50 stud radius
    local radius = 15
    local closestPlayer = getClosestPlayer(character.HumanoidRootPart, radius)

    -- If a player is found, fire the remote event
    if closestPlayer then
        local args = {
            [1] = closestPlayer.Character.Head
        }
        game:GetService("ReplicatedStorage"):WaitForChild("GeneralHit"):FireServer(unpack(args))
        print("Closest player found! Fired event for: " .. closestPlayer.Name)
    else
        print("No player found within the specified radius.")
    end
end)



local players = game:GetService("Players")
local player = players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TestGui"
screenGui.Parent = playerGui

local textButton7 = Instance.new("TextButton")
textButton7.Name = "FourthTextButton"
textButton7.Parent = screenGui
textButton7.Size = UDim2.new(0, 50, 0, 50)
textButton7.Position = UDim2.new(0.5, 85, 0.5, -150)
textButton7.BackgroundColor3 = Color3.new(0.389, 0, 0)


textButton7.Text = "Brutal Punch (Requires Charge)"
textButton7.TextColor3 = Color3.new(255, 255, 255)
textButton7.TextScaled = true
textButton7.Font = Enum.Font.SourceSansBold
textButton7.BorderColor3 = Color3.new(255, 0, 0)
textButton7.BorderSizePixel = 5

textButton7.MouseButton1Click:Connect(function()






local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Player = Players.LocalPlayer
local Radius = 50 -- You can adjust this value

local function getClosestPlayer(centerPos)
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - centerPos).Magnitude
            if distance <= Radius and distance < shortestDistance then
                shortestDistance = distance
                closestPlayer = player
            end
        end
    end
    return closestPlayer
end

local targetPlayer = getClosestPlayer(Player.Character.HumanoidRootPart.Position)

if targetPlayer and targetPlayer.Character then
    local args = {
        targetPlayer.Character:FindFirstChild("Left Leg"),
        true
    }
    ReplicatedStorage:WaitForChild("GeneralHit"):FireServer(unpack(args))
end

-- Get the local player and their character
    local localPlayer = players.LocalPlayer
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    
    -- Check if the character and humanoid exist
    if not character or not character:FindFirstChild("Humanoid") then
        warn("Character or Humanoid not found!")
        return
    end

    local humanoid = character:FindFirstChild("Humanoid")
    local animator = humanoid:WaitForChild("Animator")

    -- Define the punch animation
    local punchAnim = Instance.new("Animation")
    punchAnim.AnimationId = "rbxassetid://109511274923523" -- Use your punch animation ID here

    local punchTrack = animator:LoadAnimation(punchAnim)
    
    -- Play the punch animation
    punchTrack:Play()


end)


-- Create a new ScreenGui instance
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MyScreenGui"

-- Create a new TextLabel instance
local textLabel1 = Instance.new("TextLabel")
textLabel1.Name = "MyTextLabel"

-- Set the TextLabel's properties
textLabel1.Size = UDim2.new(0.2, 0, 0.1, 0) -- 50% width, 20% height
textLabel1.Position = UDim2.new(0.5, 85, 0.5, -30) -- Top-left corner
textLabel1.BackgroundTransparency = 0 -- Make the background transparent
textLabel1.Text = "Apex Destroyer Made By Virus Scripts"
textLabel1.TextColor3 = Color3.new(1, 1, 1) -- White text color
textLabel1.TextScaled = true -- Scales the text to fit the label size
textLabel1.Font = Enum.Font.SourceSansBold
textLabel1.BackgroundColor3 = Color3.new(0.389, 0, 0)
textLabel1.BorderSizePixel = 5
textLabel1.BorderColor3 = Color3.new(255, 0, 0)

-- Parent the TextLabel to the ScreenGui


textLabel1.Parent = screenGui

-- Get the player's PlayerGui and parent the ScreenGui to it
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
screenGui.Parent = playerGui



local players = game:GetService("Players")
local player = players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TestGui"
screenGui.Parent = playerGui

local textButton4 = Instance.new("TextButton")
textButton4.Name = "FourthTextButton"
textButton4.Parent = screenGui
textButton4.Size = UDim2.new(0, 50, 0, 50)
textButton4.Position = UDim2.new(0.5, 260, 0.5, -120)
textButton4.BackgroundColor3 = Color3.new(0.389, 0, 0)

textButton4.Text = "X (Delete Buttons)"
textButton4.TextColor3 = Color3.new(255, 255, 255)
textButton4.TextScaled = true
textButton4.Font = Enum.Font.SourceSansBold
textButton4.BorderColor3 = Color3.new(255, 0, 0)
textButton4.BorderSizePixel = 5


textButton4.MouseButton1Click:Connect(function()

textButton1:Destroy()
textButton2:Destroy()
textButton3:Destroy()
textButton4:Destroy()
textButton5:Destroy()
textButton6:Destroy()
textButton7:Destroy()
textLabel1:Destroy()


end)


